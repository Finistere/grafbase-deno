[config]
default_to_workspace = false

[tasks.install-deployctl]
install_script = '''
deno install --allow-read --allow-write --allow-env --allow-net --allow-run --no-check --force https://deno.land/x/deploy/deployctl.ts
'''
ignore_errors = true

[tasks.add-wasm32-target]
command = "rustup"
args = ["target", "add", "wasm32-unknown-unknown"]

[tasks.install]
dependencies = ["add-wasm32-target", "install-deployctl"]

[tasks.registry]
command = "cargo"
args = [
  "run",
  "-p",
  "grafbase-deno-parser",
  "schema.graphql",
  "crates/app/assets/registry.json",
]

[tasks.cargo-build]
dependencies = ["registry"]
command = "cargo"
args = [
  "build",
  "-p",
  "grafbase-deno-app",
  "--release",
  "--target",
  "wasm32-unknown-unknown",
]

[tasks.wasm-bindgen]
command = "wasm-bindgen"
args = [
  "target/wasm32-unknown-unknown/release/grafbase_deno_app.wasm",
  "--target",
  "deno",
  "--out-dir",
  "build/",
]

[tasks.build-wasm]
dependencies = ["add-wasm32-target", "cargo-build", "wasm-bindgen"]

[tasks.deploy]
dependencies = ["install-deployctl", "build-wasm"]
command = "deployctl"
args = [
  "deploy",
  "--project=${DENO_PROJECT}",
  "index.ts",
  "--include",
  "build,index.ts",
]
